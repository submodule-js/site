(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[926],{2799:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/concepts/server_executable",function(){return n(2554)}])},979:function(e,t,n){"use strict";var o=n(5893),a=n(315),i=n.n(a);t.Z={useNextSeoProps:()=>({titleTemplate:"%s â€“ Submodule \uD83D\uDE80"}),head:(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)("meta",{name:"viewport",content:"width=device-width, initial-scale=1.0"}),(0,o.jsx)("meta",{property:"og:title",content:"Submodule"}),(0,o.jsx)("meta",{property:"og:description",content:"Composable submodule"})]}),logo:(0,o.jsx)("span",{className:i().className,style:{fontSize:"2rem",color:"#F95738"},children:"Submodule"}),project:{link:"https://github.com/submodule-js/submodule"},editLink:{text:null},feedback:{content:null},footer:{text:(0,o.jsxs)("span",{children:["MIT ",new Date().getFullYear()," \xa9 ",(0,o.jsx)("a",{href:"https://submodule.io",target:"_blank",children:"SubmoduleJS"}),"."]})},primaryHue:27}},2554:function(e,t,n){"use strict";n.r(t);var o=n(5893),a=n(4319),i=n(3762),s=n(979);n(9966);var l=n(1151);function r(e){let t=Object.assign({p:"p",h3:"h3"},(0,l.ah)(),e.components);return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.p,{children:"Submodule offers two different operation models."}),"\n",(0,o.jsx)(t.h3,{id:"server-mode",children:"Server mode"}),"\n",(0,o.jsx)(t.p,{children:"Server mode situables for an application that relies on Submodule to manage the whole life cycle. The whole operations isn't likely to go without Submodule involvement."}),"\n",(0,o.jsx)(t.p,{children:"A good example would be a typical any Node.js web application like Express. If you decide Submodule to manage life cycle of Express life cycle, then the Server is the one for you"}),"\n",(0,o.jsx)(t.h3,{id:"executable-mode",children:"Executable mode"}),"\n",(0,o.jsx)(t.p,{children:"On the opposite, where you have a little control over the life cycle of the application, you may want Submodule to operate just like any other Function. As such, you still can utilize all of Submodule concept. All backend operations can be used as easy as calling a function"}),"\n",(0,o.jsx)(t.p,{children:"A good example of Executable would be an integration with Next.js. Nextjs is a opinionated development model with a lot of magic behind the scene to offer good DX. To integrate with Next.js, Submodule rather be operated in Executable mode, then we can trigger the function just be calling the function within Next.js API handler"})]})}n(5675);let c={MDXContent:function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:t}=Object.assign({},(0,l.ah)(),e.components);return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(r,{...e})}):r(e)},pageOpts:{filePath:"pages/concepts/server_executable.mdx",route:"/concepts/server_executable",headings:[{depth:3,value:"Server mode",id:"server-mode"},{depth:3,value:"Executable mode",id:"executable-mode"}],pageMap:[{kind:"Meta",data:{index:"Introduction",getting_started:"Getting started",concepts:"Concepts",putting_together:"Putting together"}},{kind:"Folder",name:"concepts",route:"/concepts",children:[{kind:"Meta",data:{type_shapes:"Type shapes",server_executable:"Operation modes"}},{kind:"MdxPage",name:"server_executable",route:"/concepts/server_executable"},{kind:"MdxPage",name:"type_shapes",route:"/concepts/type_shapes"}]},{kind:"MdxPage",name:"getting_started",route:"/getting_started"},{kind:"MdxPage",name:"index",route:"/"},{kind:"MdxPage",name:"putting_together",route:"/putting_together"}],flexsearch:{codeblocks:!0},title:"Server Executable"},pageNextRoute:"/concepts/server_executable",nextraLayout:i.ZP,themeConfig:s.Z};t.default=(0,a.j)(c)}},function(e){e.O(0,[774,270,888,179],function(){return e(e.s=2799)}),_N_E=e.O()}]);